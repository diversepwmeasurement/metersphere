jobs:
  build_push:
    name: Build Docker Image and Push without X-Pack Submodules
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        submodules: false
        token: ${{ secrets.ACCESS_TOKEN }}
    - continue-on-error: true
      name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x
    - continue-on-error: true
      env:
        cache-name: cache-node-modules
      name: Cache node modules
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json')
          }}
        path: ~/.npm
        restore-keys: '${{ runner.os }}-build-${{ env.cache-name }}-

          ${{ runner.os }}-build-

          ${{ runner.os }}-

          '
    - continue-on-error: true
      name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
        server-id: github
        settings-path: ${{ github.workspace }}
    - continue-on-error: true
      name: Build with Maven
      run: mvn -B package --file pom.xml
    - continue-on-error: true
      name: Unzip jar
      run: mkdir -p backend/target/dependency && (cd backend/target/dependency; jar
        -xf ../*.jar)
    - continue-on-error: true
      id: prepare
      name: Prepare
      run: "DOCKER_IMAGE=metersphere/metersphere\nDOCKER_PLATFORMS=linux/amd64,linux/arm64\n\
        TAG_NAME=${{ env.GITHUB_REF_SLUG }}-oss\nDOCKER_IMAGE_TAGS=\"--tag ${DOCKER_IMAGE}:${TAG_NAME}\
        \ --tag ${DOCKER_IMAGE}:latest-oss\"\necho ::set-output name=docker_image::${DOCKER_IMAGE}\n\
        echo ::set-output name=version::${TAG_NAME}\necho ::set-output name=buildx_args::--platform\
        \ ${DOCKER_PLATFORMS} \\\n  --build-arg VERSION=${TAG_NAME} \\\n  --build-arg\
        \ MS_VERSION=${{ env.GITHUB_REF_SLUG }}-${{ env.GITHUB_SHA_SHORT }} \\\n \
        \ --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \\\n  --build-arg\
        \ VCS_REF=${GITHUB_SHA::8} \\\n  ${DOCKER_IMAGE_TAGS} .\n"
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: crazy-max/ghaction-docker-buildx@v3
    - continue-on-error: true
      name: Docker Buildx (build)
      run: 'docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args
        }}

        '
    - continue-on-error: true
      name: Login to Registry
      uses: docker/login-action@v1
      with:
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        username: metersphere
    - continue-on-error: true
      name: Docker Buildx (push)
      run: 'docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args
        }}

        '
name: Build Docker Image and Push without X-Pack Submodules
on:
  repository_dispatch:
    types: trigger-ga___build-push-oss.yml
